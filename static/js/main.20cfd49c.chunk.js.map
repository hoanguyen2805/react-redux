{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/auth-header.js","services/user.service.js","components/Home.js","components/Profile.js","common/EventBus.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","email","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","useSelector","dispatch","useDispatch","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","Promise","resolve","error","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","Authorization","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","id","roles","map","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","status","EventBus","BoardModerator","BoardAdmin","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","logOut","useCallback","includes","href","onClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.20cfd49c.chunk.js","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8081/api/v1/auth/\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  const { message } = useSelector(state => state.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(login(username, password))\r\n        .then(() => {\r\n          props.history.push(\"/react-redux/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/react-redux/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = () => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n\r\n  const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      dispatch(register(username, email, password))\r\n        .then(() => {\r\n          setSuccessful(true);\r\n        })\r\n        .catch(() => {\r\n          setSuccessful(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={onChangeUsername}\r\n                  validations={[required, vusername]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // For Spring Boot back-end\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    // for Node.js Express back-end\r\n    //return { \"x-access-token\": user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8081/api/v1/test/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst Home = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response && error.response.data) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Profile = () => {\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.username}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n      <strong>Authorities:</strong>\r\n      <ul>\r\n        {currentUser.roles &&\r\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardUser = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardModerator = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getModeratorBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardModerator;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nconst BoardAdmin = () => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getAdminBoard().then(\r\n      (response) => {\r\n        setContent(response.data);\r\n      },\r\n      (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        setContent(_content);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>{content}</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardAdmin;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\nimport BoardModerator from \"./components/BoardModerator\";\r\nimport BoardAdmin from \"./components/BoardAdmin\";\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from \"./helpers/history\";\r\n\r\n// import AuthVerify from \"./common/AuthVerify\";\r\nimport EventBus from \"./common/EventBus\";\r\n\r\nconst App = () => {\r\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\r\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\r\n\r\n  const { user: currentUser } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const logOut = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\r\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\r\n    } else {\r\n      setShowModeratorBoard(false);\r\n      setShowAdminBoard(false);\r\n    }\r\n\r\n    EventBus.on(\"logout\", () => {\r\n      logOut();\r\n    });\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\");\r\n    };\r\n  }, [currentUser, logOut]);\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/react-redux/\"} className=\"navbar-brand\">\r\n            bezKoder\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/react-redux/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  href=\"/react-redux/login\"\r\n                  className=\"nav-link\"\r\n                  onClick={logOut}\r\n                >\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/react-redux/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/react-redux/home\"\r\n              component={Home}\r\n            />\r\n            <Route exact path=\"/react-redux/login\" component={Login} />\r\n            <Route exact path=\"/react-redux/register\" component={Register} />\r\n            <Route exact path=\"/react-redux/profile\" component={Profile} />\r\n            <Route path=\"/react-redux/user\" component={BoardUser} />\r\n            <Route path=\"/react-redux/mod\" component={BoardModerator} />\r\n            <Route path=\"/react-redux/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n\r\n        {/* <AuthVerify logOut={logOut}/> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chađinge\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}